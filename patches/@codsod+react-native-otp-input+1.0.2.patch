diff --git a/node_modules/@codsod/react-native-otp-input/src/index.d.ts b/node_modules/@codsod/react-native-otp-input/src/index.d.ts
index 1b7c216..efaad62 100644
--- a/node_modules/@codsod/react-native-otp-input/src/index.d.ts
+++ b/node_modules/@codsod/react-native-otp-input/src/index.d.ts
@@ -4,6 +4,7 @@ import { ViewStyle } from "react-native";
 interface OTPInputProps {
   length?: number;
   onOtpComplete?: (message: string) => any;
+  onOtpRemove?: (message: string) => any;
   style?: ViewStyle;
   inputStyle?: ViewStyle;
 }
@@ -11,6 +12,7 @@ interface OTPInputProps {
 export default function OTPInput({
   length,
   onOtpComplete,
+  onOtpRemove,
   style,
   inputStyle,
 }: OTPInputProps): React.JSX.Element;
diff --git a/node_modules/@codsod/react-native-otp-input/src/index.jsx b/node_modules/@codsod/react-native-otp-input/src/index.jsx
index 00a2de3..64879e1 100644
--- a/node_modules/@codsod/react-native-otp-input/src/index.jsx
+++ b/node_modules/@codsod/react-native-otp-input/src/index.jsx
@@ -9,9 +9,11 @@ import {
 
 const OTPInput = ({
   length = 4,
-  onOtpComplete = () => {},
+  onOtpComplete = () => { },
+  onOtpRemove = () => { },
   style,
   inputStyle,
+  secureTextEntry = false
 }) => {
   const [otp, setOtp] = useState(Array(length).fill(""));
   const inputRefs = useRef([]);
@@ -37,16 +39,17 @@ const OTPInput = ({
     } else if (text === "") {
       newOtp[index] = "";
       setOtp(newOtp);
+      onOtpRemove(newOtp.join(""));
     }
   };
 
   const handleKeyPress = (event, index) => {
     const { key } = event.nativeEvent;
-
     if (key === "Backspace") {
       if (otp[index] === "" && index > 0) {
         inputRefs.current[index - 1].focus();
-      } else {
+      }
+      else {
         const newOtp = [...otp];
         newOtp[index] = "";
         setOtp(newOtp);
@@ -56,6 +59,7 @@ const OTPInput = ({
 
   useEffect(() => {
     const handleBackPress = () => {
+
       const focusedInputIndex = inputRefs.current.findIndex(
         (ref) => ref && ref.isFocused()
       );
@@ -102,6 +106,7 @@ const OTPInput = ({
         .map((_, index) => (
           <TextInput
             key={index}
+            secureTextEntry={secureTextEntry}
             ref={(ref) => (inputRefs.current[index] = ref)}
             style={[styles.otpInput, inputStyle]}
             value={otp[index]}
